{"version":3,"sources":["main/js/general.js","main/generator/lengthCalc.js","main/generator/scales.js","main/generator/createSong.js","main/music-player/music-player.js","main/js/settings.js","main/js/laboratory.js","main/generator/analyze/graph-visualizer.js","main/js/graph.js","main/generator/analyze/seeGraphs.js","main/main.js","index.js"],"names":["notes","translateFlats","note","res","ref","includes","indexOf","noteToIndex","root","rootIndex","convertToIndex","song","obj","push","flatToSharp","i","lengthCalc","barCount","lengths","totalLength","finalList","total","maxRange","Math","trunc","count","floor","random","a","array","finalCount","forEach","num","sumRemainder","temporaryValue","randomIndex","currentIndex","length","shuffle","scales","createSong","settings","s","keys","setDefault","lengthArr","achivedScale","arr","n","result","Array","len","taken","RangeError","x","getRandom","scale","key","noteRange","startIndex","nums","octabes","abs","getScale","notesArr","l","console","log","MusicPlayer","props","playpause","useRef","detailsIcon","details","onOffDetails","heart","progressContainer","progressBar","synth","Tone","toDestination","bpmCalc","urls","A1","A2","baseUrl","bpm","playPause","current","classList","contains","remove","querySelector","add","now","value","timeSum","triggerAttackRelease","playSong","toggleLike","likedSongs","setLikedSongs","liked","heartIcon","index","tmp","splice","unLikeSong","likeSong","className","createdSongs","onClick","e","clientWidth","offsetX","width","clickX","progressPercent","style","setProgress","target","display","type","setCreatedSongs","deleteSong","Settings","customSettings","setCustomSettings","mouseCursor","settingCard","selectors","applySettingsButton","selectScale","selectKey","cursor","top","pageY","left","pageX","hideCursor","hideSelectors","onMouseMove","onMouseLeave","name","id","list","defaultValue","applySettings","Laboratory","laboratory","toggleMenu","menu","draw","ctx","currentCoordinate","coordinate","fillStyle","beginPath","arc","PI","fill","y","moveTo","lineTo","stroke","Canvas","canvasRef","useEffect","getContext","lowest","highest","heightForNote","widthForNote","startCoordinate","getCoordinates","height","Graph","songs","map","testList","TestGraphs","Main","useState","MusicPlayers","Button","variant","generateSong","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gSA0BA,IAAMA,EAAQ,CACV,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAK,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACrE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,OAGpEC,EAAiB,SAACC,GACpB,IAAIC,EAAMD,EACJE,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAY3C,OAXIF,EAAKG,SAAS,OACdF,EAAM,GACS,KAAXD,EAAK,GACLC,GAAOC,EAAIA,EAAIE,QAAQJ,EAAK,IAAM,GAElCC,GAAO,IAEXA,GAAO,IACPA,GAAOD,EAAK,IAGTC,GAWLI,EAAc,SAACL,EAAMM,GACvB,IAAMC,EAAYT,EAAMM,QAAQE,EAAK,KAErC,OADkBR,EAAMM,QAAQJ,GACbO,GAGVC,EAAiB,SAACC,EAAMH,GACjC,IAD0C,EACtCL,EAAM,GACNS,EAhBY,SAACD,GACjB,IAD0B,EACtBR,EAAM,GADgB,cAEVQ,GAFU,IAE1B,IAAI,EAAJ,qBAAsB,CAAC,IAAfT,EAAc,QAClBC,EAAIU,KAAK,CAACZ,EAAeC,EAAK,IAAKA,EAAK,MAHlB,8BAK1B,OAAOC,EAWGW,CAAYH,GAFoB,cAI5BC,GAJ4B,IAI1C,2BAAmB,CAAC,IAAXG,EAAU,QACJ,QAARA,EAAE,GACDZ,EAAIU,KAAK,CAACN,EAAYQ,EAAE,GAAIP,GAAOO,EAAE,KAErCZ,EAAIU,KAAK,CAAEN,EAAYK,EAAI,GAAG,GAAIJ,MARA,8BAY1C,OAAOL,GC3EEa,EAAa,SAACC,GAmBvB,IAhBA,IAAIC,EAAU,CAAC,EAAE,EAAG,EAAE,EAAG,KAAS,GAAK,IAAS,GAU1CC,EAAcF,EAEhBG,EAAY,GAEZC,EAAQF,EACRJ,EAAI,EACDM,GAAO,CAKV,IAJA,IAAIC,EAAWC,KAAKC,MAAMH,EAAMH,EAAQH,IACpCU,EAAQF,KAAKG,MAAMH,KAAKI,UAAYL,EAAS,IAE7CM,EAAIH,EACDG,EAAI,GACPR,EAAUP,KAAKK,EAAQH,IACtBa,GAAK,EAGVP,GAASI,EAAMP,EAAQH,GACvBA,GAAK,EAeT,OAZqB,SAACc,GAClB,IAAIC,EAAa,EACjBD,EAAME,SAAQ,SAAAC,GACVF,GAAcE,KAEdF,EAAaX,GACbU,EAAMhB,KAAKM,EAAcW,GAIjCG,CAAab,GD9CV,SAAiBS,GAEpB,IADA,IAAiCK,EAAgBC,EAA7CC,EAAeP,EAAMQ,OAClB,IAAMD,GACXD,EAAcZ,KAAKG,MAAMH,KAAKI,SAAWS,GAEzCF,EAAiBL,EADjBO,GAAgB,GAEhBP,EAAMO,GAAgBP,EAAMM,GAC5BN,EAAMM,GAAeD,EAEvB,OAAOL,ECuCAS,CAAQlB,IChDbpB,EAAQ,CACV,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAK,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACrE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MACtE,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,OAQpEuC,EAAS,CACX,KAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC3C,WAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjC,WAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjC,gBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAChC,gBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,IAChC,cAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpC,cAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KCCjC,SAASC,EAAWC,GAEzB,IAAIC,EApBa,SAACD,GAElB,IAAMF,EAAS,CACb,aAAc,aAAc,kBAAmB,kBAAmB,gBAAiB,gBACnF,aAAc,cAEVI,EAAO,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KASpE,MAAO,CAAC,MAP2B,UAArBF,EAAQ,MAAwBF,EAAOhB,KAAKG,MAAMH,KAAKI,SAAWY,EAAOF,SAAWI,EAAQ,MAOlF,IANO,UAAnBA,EAAQ,IAAsBE,EAAKpB,KAAKG,MAAMH,KAAKI,SAAWgB,EAAKN,SAAWI,EAAQ,IAM9D,IALL,UAAnBA,EAAQ,IAAsBlB,KAAKG,MAAM,GAAAH,KAAKI,SAAwB,IAAMc,EAAQ,IAKhD,cAJG,QAA7BA,EAAQ,cAA8B,KAAOA,EAAQ,cAIK,KAHnEA,EAAQ,KAGyE,OAF/EA,EAAQ,QAOfG,CAAWH,GAEf9B,EAAO,GAEPkC,EAAY7B,EAAW0B,EAAC,QAExBI,EHlBC,SAAmBC,EAAKC,GAC3B,IAAIC,EAAS,IAAIC,MAAMF,GACnBG,EAAMJ,EAAIV,OACVe,EAAQ,IAAIF,MAAMC,GACtB,GAAIH,EAAIG,EACJ,MAAM,IAAIE,WAAW,iDACzB,KAAOL,KAAK,CACR,IAAIM,EAAI/B,KAAKG,MAAMH,KAAKI,SAAWwB,GACnCF,EAAOD,GAAKD,EAAIO,KAAKF,EAAQA,EAAME,GAAKA,GACxCF,EAAME,KAAOH,KAAOC,EAAQA,EAAMD,GAAOA,EAE7C,OAAOF,EGOUM,CDJd,SAAkBC,EAAOC,GAS5B,IATsD,IAArBC,EAAoB,uDAAR,CAAC,EAAG,GAE7CvD,EAAM,GACJK,EAAOiD,EAAMC,EAAU,GACzBC,EAAa3D,EAAMM,QAAQE,GAC3BoD,EAAI,YAAOrB,EAAOiB,IAChBK,EAAUtC,KAAKuC,IAAIJ,EAAU,GAAKA,EAAU,IAE9C3C,EAAI,EACDA,GAAK8C,EAAQ,GAChBD,EAAK7B,SAAQ,SAAAC,GAAG,OAAI4B,EAAK/C,KAAKmB,EAAQ,GAAFjB,MACpCA,GAAK,EAKT,IAHA6C,EAAK/C,KAAa,GAARgD,GAEV9C,EAAI,EACGA,EAAI6C,EAAKvB,QACZlC,EAAIU,KAAKb,EAAM2D,EAAaC,EAAK7C,KACjCA,GAAK,EAET,OAAOZ,EChBoB4D,CAASrB,EAAC,MAAWA,EAAC,KAAU,GACzDsB,EACFtB,EAAC,eAAqBI,EAGxBJ,EAAC,KAAWsB,EAASnD,KAAK,QAE1BgC,EAAUd,SAAQ,SAAAkC,GAChBtD,EAAKE,KAAK,CAACmD,EAASzC,KAAKG,MAAMH,KAAKI,SAAWqC,EAAS3B,SAAU4B,OAKpE,IAAI9D,EAAM,CAAC,KAAQQ,EAAM,IAAO+B,EAAC,IAAS,QAAW,CAAC,MAASA,EAAC,MAAW,IAAOA,EAAC,MAGnF,OADAwB,QAAQC,IAAIhE,GACLA,E,iBCtCF,SAASiE,EAAYC,GAExB,IAAI1D,EAAO0D,EAAM1D,KAEX2D,EAAYC,mBAEZC,GADOD,mBACOA,oBACdE,EAAUF,mBACVG,EAAeH,mBACfI,EAAQJ,mBAERK,EAAoBL,mBACpBM,EAAcN,mBAKdO,GAAQ,IAAIC,KAAaC,gBAkBzBC,GAhBU,IAAIF,IAAa,CAC7BG,KAAM,CACFC,GAAI,SACJC,GAAI,UAERC,QAAS,0CACVL,gBAUa,SAACM,GAGb,OAFwB,GAAGA,EAAI,MAsDnC,SAASC,EAAU5E,GACG2D,EAAUkB,QAAQC,UAAUC,SAAS,YANvDpB,EAAUkB,QAAQC,UAAUE,OAAO,WACnCrB,EAAUkB,QAAQI,cAAc,SAASH,UAAUE,OAAO,YAC1DrB,EAAUkB,QAAQI,cAAc,SAASH,UAAUI,IAAI,YAhC3D,SAAkBlF,GACd,IAAMmF,EAAMf,MAEZT,EAAUkB,QAAQC,UAAUI,IAAI,WAChCvB,EAAUkB,QAAQI,cAAc,SAASH,UAAUE,OAAO,WAC1DrB,EAAUkB,QAAQI,cAAc,SAASH,UAAUI,IAAI,YAGvD,IAAIP,EAAM3E,EAAI,IAAQ,EACtBoE,IAAeO,IAAIS,MAAQT,EAI3B,IAFA,IAAIvE,EAAI,EACJiF,EAAU,EACPjF,EAAIJ,EAAI,KAAS0B,QAAUiC,EAAUkB,QAAQC,UAAUC,SAAS,YACzC,QAAtB/E,EAAI,KAASI,GAAG,IAChB+D,EAAMmB,qBAAqBtF,EAAI,KAASI,GAAG,GAAKkE,EAAQK,GAAM3E,EAAI,KAASI,GAAG,GAAI+E,EAAIE,GAG1FA,GAAYf,EAAQK,GAAM3E,EAAI,KAASI,GAAG,GAC1CA,GAAK,EAmBHmF,CAASvF,GAsCnB,IAiDMwF,EAAa,SAACxF,EAAMyF,EAAYC,GAClC,IAAIC,EAAQ3B,EAAMa,QAAQC,UAAUC,SAAS,SACzCa,EAAY5B,EAAMa,QAAQI,cAAc,cAExCU,IAjBW,SAAC3F,EAAMyF,EAAYC,EAAeE,GAEjD,IAAIC,EAAQJ,EAAW9F,QAAQK,GAC3B8F,EAAG,YAAOL,GACVI,GAAS,GACTC,EAAIC,OAAOF,EAAO,GAEtBD,EAAUd,UAAUE,OAAO,SAC3BY,EAAUd,UAAUE,OAAO,OAC3BY,EAAUd,UAAUI,IAAI,OACxBQ,EAAcI,GAQVE,CAAWhG,EAAMyF,EAAYC,EAAeE,GAC5CrC,QAAQC,IAAImC,MA1BH,SAAC3F,EAAMyF,EAAYC,EAAeE,GAC/CA,EAAUd,UAAUI,IAAI,SACxBU,EAAUd,UAAUE,OAAO,OAC3BY,EAAUd,UAAUI,IAAI,OACxBQ,EAAc,CAAC1F,GAAF,mBAAWyF,KAwBpBQ,CAASjG,EAAMyF,EAAYC,EAAeE,GAC1CrC,QAAQC,IAAImC,IAEhBpC,QAAQC,IAAIiC,IAGhB,OAEI,sBAAKS,UAAU,oBAAf,UACI,qBAAKA,UAAU,cAAf,SAA6B,8BAAIxC,EAAMyC,aAAazE,OAAUgC,EAAMyC,aAAaxG,QAAQ+D,EAAM1D,MAAlE,SAC7B,qBAAKkG,UAAU,cACf,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAazG,IAAMkE,EAAYyC,QAAS,kBAAMxB,EAAU5E,IAAvE,SACI,wBAAQkG,UAAU,oBAAlB,SAAsC,mBAAGA,UAAU,sBAI3D,qBAAKA,UAAU,qBAAqBzG,IAAMwE,EAAoBmC,QAAS,SAACC,GAAD,OApG/E,SAAqBC,EAAaC,GAC9B,IAAMC,EAAQF,EACRG,EAASF,EACTG,EAAmBD,EAAOD,EAAO,IACvCtC,EAAYW,QAAQ8B,MAAMH,MAA1B,UAAqCE,EAArC,KAEAnD,QAAQC,IAAIgD,EAAOC,EAAQC,GA8FuDE,CAAYP,EAAEQ,OAAOP,YAAaD,EAAEQ,OAAON,UAAzH,SACI,qBAAKL,UAAU,WAAWzG,IAAMyE,MAEpC,sBAAKgC,UAAU,yBAAf,UACI,sBAAKA,UAAU,sBAAsBzG,IAAMoE,EAAcuC,QAAS,WA7E1DvC,EAAYgB,QAAQC,UAAUC,SAAS,YAEnDlB,EAAYgB,QAAQI,cAAc,SAASH,UAAUE,OAAO,eAC5DnB,EAAYgB,QAAQI,cAAc,SAASH,UAAUI,IAAI,iBACzDrB,EAAYgB,QAAQC,UAAUE,OAAO,WAKjClB,EAAQe,QAAQ8B,MAAMG,QAAU,SAGpCjD,EAAYgB,QAAQI,cAAc,SAASH,UAAUE,OAAO,iBAC5DnB,EAAYgB,QAAQI,cAAc,SAASH,UAAUI,IAAI,eACzDpB,EAAQe,QAAQ8B,MAAMG,QAAU,QAChCjD,EAAYgB,QAAQC,UAAUI,IAAI,aA8D9B,UACI,uBAAOzF,IAAMsE,EAAegD,KAAK,WAAWb,UAAU,mBACtD,mBAAGA,UAAU,yBAEjB,sBAAKzG,IAAMqE,EAAUoC,UAAU,eAA/B,UACI,wCAAWlG,EAAI,QAAJ,SACX,sCAASA,EAAI,QAAJ,aAGjB,qBAAKkG,UAAU,cAAf,SAGI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,+BAA+BzG,IAAKuE,EAAOoC,QAAU,kBAAMZ,EAAWxF,EAAM0D,EAAM+B,WAAY/B,EAAMgC,gBAAnH,SAAoI,mBAAGQ,UAAU,mBACjJ,qBAAKA,UAAU,mBAAmBE,QAAU,kBAxEzC,SAACpG,EAAMmG,EAAca,GACpC,IAAIlB,EAAG,YAAOK,GACVN,EAAQM,EAAaxG,QAAQK,GAC7B6F,GAAS,GACTC,EAAIC,OAAOF,EAAO,GAEtBmB,EAAgBlB,GAkE8CmB,CAAWjH,EAAM0D,EAAMyC,aAAczC,EAAMsD,kBAA7F,SAAgH,mBAAGd,UAAU,mBAC7H,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,0B,WCtO5D,SAASgB,EAAUxD,GAEtB,IAAIyD,EAAiBzD,EAAMyD,eACrBC,EAAoB1D,EAAM0D,kBAE1BC,EAAczD,mBACd0D,EAAc1D,mBACd2D,EAAY3D,mBACZ4D,EAAsB5D,mBACtB6D,EAAc7D,mBACd8D,EAAY9D,mBAoBZ+D,EAAS,SAACtB,GACZgB,EAAYxC,QAAQ8B,MAAMG,QAAU,QACpCO,EAAYxC,QAAQ8B,MAAMiB,IAAMvB,EAAEwB,MAAQ,KAC1CR,EAAYxC,QAAQ8B,MAAMmB,KAAOzB,EAAE0B,MAAQ,MAGzCC,EAAa,WACfX,EAAYxC,QAAQ8B,MAAMG,QAAU,QAQlCmB,EAAgB,WAClBX,EAAYzC,QAAQ8B,MAAMG,QAAU,OACpCS,EAAU1C,QAAQ8B,MAAMG,QAAU,QAGtC,OACI,sBAAKZ,UAAU,kBAAf,UACI,qBAAKzG,IAAM4H,EAAcnB,UAAU,WACnC,sBAAKA,UAAU,eAAezG,IAAK6H,EAAaY,YAAa,SAAC7B,GAAD,OAAOsB,EAAOtB,IAAI8B,aAAc,kBAAMH,KAAc5B,QAAS,kBAZ9HkB,EAAYzC,QAAQ8B,MAAMG,QAAU,YACpCS,EAAU1C,QAAQ8B,MAAMG,QAAU,SAW9B,UACI,mBAAGZ,UAAU,eACb,8BAAG,yCAAH,OAAyB,oDAAzB,oCAEJ,sBAAKzG,IAAK8H,EAAWrB,UAAU,YAAYgC,YAAa,SAAC7B,GAAD,OAAOsB,EAAOtB,IAAI8B,aAAc,kBAAMH,KAA9F,UACI,6CACA,yBAAQvI,IAAMgI,EAAcW,KAAK,QAAQC,GAAG,QAA5C,UACI,wBAAQjD,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,mBACA,wBAAQA,MAAM,aAAd,mBACA,wBAAQA,MAAM,kBAAd,8BACA,wBAAQA,MAAM,kBAAd,8BACA,wBAAQA,MAAM,gBAAd,4BACA,wBAAQA,MAAM,gBAAd,+BAEJ,2CACA,yBAAQ3F,IAAMiI,EAAYU,KAAK,MAAMC,GAAG,MAAxC,UACI,wBAAQjD,MAAM,SAAd,oBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,kBAGJ,qBAAK3F,IAAM+H,EAAsBtB,UAAU,iBAAiBE,QAAS,kBA1E3D,WAKlB,IAJA,IAAIkC,EAAO,CAACb,EAAY5C,QAAQO,MAAOsC,EAAU7C,QAAQO,OAErDmD,EAAe,CAAC,SAAU,UAC1BnI,EAAI,EACDA,EAAIkI,EAAK5G,QACZ4G,EAAKlI,GAAiB,UAAXkI,EAAKlI,GAAkBkI,EAAKlI,GAAKmI,EAAanI,GACzDA,GAAK,EAGT,IAAI0B,EAAQ,eAAOqF,GACnBrF,EAAQ,MAAYwG,EAAK,GACzBxG,EAAQ,IAAUwG,EAAK,GACvBlB,EAAkBtF,GAElBmG,IA2DmFO,IAA3E,SACI,8BAAG,mBAAGtC,UAAU,qBAAhB,6BCjFb,SAASuC,EAAY/E,GAGxB,IAAMgF,EAAa9E,mBAEb+E,EAAa,SAACC,GAChBF,EAAW7D,QAAQI,cAAnB,uBAAwDH,UAAUE,OAAO,YACzE0D,EAAW7D,QAAQI,cAAnB,2BAA4DH,UAAUE,OAAO,YAC7E0D,EAAW7D,QAAQI,cAAnB,qBAA+C2D,IAAQ9D,UAAUI,IAAI,YACrEwD,EAAW7D,QAAQI,cAAnB,yBAAmD2D,IAAQ9D,UAAUI,IAAI,aAG7E,OACI,sBAAKgB,UAAU,aAAazG,IAAKiJ,EAAjC,UACI,0BAASxC,UAAU,WAAnB,UACI,qBAAKA,UAAU,8BAA8BE,QAAS,kBAAMuC,EAAW,aAAvE,sBACA,qBAAKzC,UAAU,mBAAmBE,QAAS,kBAAMuC,EAAW,WAA5D,oBACA,qBAAKzC,UAAU,kBAAkBE,QAAS,kBAAMuC,EAAW,UAA3D,mBACA,qBAAKzC,UAAU,uBAAuBE,QAAS,kBAAMuC,EAAW,eAAhE,yBACA,qBAAKzC,UAAU,gBAAf,gBACA,qBAAKA,UAAU,gBAAf,gBACA,sBAAKA,UAAU,kBAAf,UAAiC,mBAAGA,UAAU,oBAA9C,WACA,sBAAKA,UAAU,gBAAf,UAA+B,mBAAGA,UAAU,2BAA5C,YAEJ,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,cAACgB,EAAD,CAAUC,eAAgBzD,EAAMyD,eAAgBC,kBAAmB1D,EAAM0D,sBAE7E,qBAAKlB,UAAU,uBAAf,qBACA,qBAAKA,UAAU,sBAAf,mBACA,qBAAKA,UAAU,mC,UCOlB2C,EAAO,SAACC,EAAK7I,GAEtB,IAAI8I,EAAoB,CAAC9I,EAAI,GAAG+I,WAAW,GAAI/I,EAAI,GAAG+I,WAAW,IAGjEF,EAAIG,UAAY,oBAChBH,EAAII,YACJJ,EAAIK,IAAIlJ,EAAI,GAAG+I,WAAW,GAAI/I,EAAI,GAAG+I,WAAW,GAAI,EAAG,EAAG,EAAEpI,KAAKwI,IACjEN,EAAIO,OAR0B,oBAUhBpJ,GAVgB,IAU9B,2BAAmB,CAAC,IAAXG,EAAU,QACf,GAAsB,GAAlBH,EAAIN,QAAQS,GAAS,CAErB,IAAIuC,EAAIvC,EAAE4I,WAAW,GACjBM,EAAIlJ,EAAE4I,WAAW,GAErBF,EAAIS,OAAOR,EAAkB,GAAIA,EAAkB,IACnDD,EAAIU,OAAO7G,EAAG2G,GACdR,EAAIW,SAEJV,EAAoB,CAACpG,EAAG2G,GAGxBR,EAAIG,UAAY,oBAChBH,EAAII,YACJJ,EAAIK,IAAIxG,EAAG2G,EAAG,EAAG,EAAG,EAAE1I,KAAKwI,IAC3BN,EAAIO,SA1BkB,gCCpCrBK,EAAS,SAAChG,GACnB,IAAMiG,EAAY/F,mBAEd5D,EAAOD,EAAe2D,EAAM1D,KAAN,KAAoB0D,EAAM1D,KAAN,aAU9C,OARA4J,qBAAU,WACN,IACId,EADWa,EAAU9E,QACRgF,WAAW,MAG5BhB,EAAKC,EDlBiB,SAAC7I,GAC3B,IADmC,EAI/BT,EAAM,GAENgB,EAAc,EANiB,cAOrBP,GAPqB,IAOnC,2BAAmB,CAAC,IAAXG,EAAU,QACXH,EAAIN,QAAQS,IAAMH,EAAIyB,OAAS,IAC/BlB,GAAeJ,EAAE,KATU,8BAcnC,IAdmC,EAc/B0J,EAAS,IACTC,EAAU,EAfqB,cAgBrB9J,GAhBqB,IAgBnC,2BAAmB,CAAC,IAAXG,EAAU,QACXA,EAAE,GAAK0J,IACPA,EAAS1J,EAAE,IAEXA,EAAE,GAAK2J,IACPA,EAAU3J,EAAE,KArBe,8BAyBnC,IAzBmC,EA2B/B4J,EAAgB,KAFND,EAAUD,GAGpBG,EAAe,IAAiBzJ,EAChC0J,EAAkB,CAAC,GAAI,IA7BQ,cA+BrBjK,GA/BqB,IA+BnC,2BAAmB,CAAC,IAAXG,EAAU,QACX4I,EAAa,IAAIzG,MAAM,GAC3ByG,EAAW,GA/BM,KA+BgBkB,EAAgB,IAAM9J,EAAE,GAAK0J,GAAQE,GACtEhB,EAAW,GAAKkB,EAAgB,GAChCA,EAAgB,IAAMD,EAAa7J,EAAE,GAErCZ,EAAIU,KAAK,CAACX,KAAMa,EAAG4I,gBArCY,8BAyCnC,OADAzF,QAAQC,IAAIhE,GACLA,ECvBO2K,CAAenK,MAC1B,CAAC6I,IAGA,qBAAK3C,UAAU,mBAAf,SACI,wBAAQA,UAAU,SAASzG,IAAKkK,EAAWnD,MAAM,MAAM4D,OAAO,WAKnE,SAASC,EAAO3G,GAUnB,OACI,qBAAKwC,UAAU,QAAf,SAPIxC,EAAM4G,MAAMC,KAAI,SAAAvK,GACZ,OACI,cAAC,EAAD,CAAQA,KAAMA,GAAWA,EAAKA,WC1BlD,IAAMwK,EAAW,GAKV,SAASC,EAAY/G,GAUxB,OACI,qBAAKwC,UAAU,QAAf,SAPIsE,EAASD,KAAI,SAAAvK,GACT,OACI,cAAC,EAAD,CAAQA,KAAMA,EAAKA,MAAWA,EAAKA,W,kBCJhD,SAAS0K,IAAQ,IAAD,EAEqBC,mBAAS,IAF9B,mBAEZxE,EAFY,KAEEa,EAFF,OAIyB2D,mBAAS,CACjD,OAAU,IAAK,MAAS,SAAU,IAAO,SAAU,MAAQ,EAAO,IAAO,SAAU,cAAiB,SALrF,mBAIZxD,EAJY,KAIIC,EAJJ,OAOiBuD,mBAAS,IAP1B,mBAOZlF,EAPY,KAOAC,EAPA,KAgBbkF,EAAe,WACjB,OAAIzE,EAAazE,OAAS,EAElByE,EAAaoE,KAAI,SAAAvK,GACb,OACI,cAACyD,EAAD,CAAazD,KAAMA,EAAMmG,aAAcA,EAAca,gBAAiBA,EACtEvB,WAAYA,EAAYC,cAAeA,GAAoB1F,EAAKA,SAIxE,qBAAKkG,UAAU,eAAf,SACI,8EAMhB,OACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,WAAf,UACI,oDACA,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,sBAAf,UAAqC,mBAAGA,UAAU,uBAAlD,WACA,sBAAKA,UAAU,wBAAf,UAAuC,mBAAGA,UAAU,uBAApD,mBAGR,qBAAKA,UAAU,cACf,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAACuC,EAAD,CAAYtB,eAAgBA,EAAgBC,kBAAmBA,MAInE,sBAAKlB,UAAU,yBAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,cAAC2E,EAAA,EAAD,CAAQC,QAAQ,YAAY5E,UAAU,mBAAmBE,QAAS,kBAzCjE,SAACe,GAClB,IAAMnH,EAAO6B,EAAWsF,GACxBH,EAAgB,CAAChH,GAAF,mBAAWmG,KAuC8D4E,CAAa5D,IAArF,wBAIJ,cAACyD,EAAD,UAQR,cAACP,EAAD,CAAOC,MAAOnE,IACd,cAACsE,EAAD,O,IC1ENO,E,4JAEJ,WACE,OACE,qBAAK9E,UAAU,MAAf,SACE,cAACwE,EAAD,U,GALUO,IAAMC,WAaxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16972fbd.chunk.js","sourcesContent":["export function shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n}\r\n\r\nexport function getRandom(arr, n) {\r\n    var result = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    while (n--) {\r\n        var x = Math.floor(Math.random() * len);\r\n        result[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst notes = [\r\n    \"A2\", \"A#2\", \"B2\", \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \r\n    \"A3\", \"A#3\", \"B3\", \"C3\", \"C#3\", \"D3\", \"D#3\", \"E3\", \"F3\", \"F#3\", \"G3\", \"G#3\",\r\n    \"A4\", \"A#4\", \"B4\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\",\r\n    \"A5\", \"A#5\", \"B5\", \"C5\",\"C#5\", \"D5\", \"D#5\", \"E5\", \"F5\", \"F#5\", \"G5\", \"G#5\",\r\n    \"A6\", \"A#6\", \"B6\", \"C6\", \"C#6\", \"D6\", \"D#6\", \"E6\", \"F6\", \"F#6\", \"G6\", \"G#6\",\r\n    \"A7\", \"A#7\", \"B7\", \"C7\", \"C#7\", \"D7\", \"D#7\", \"E7\", \"F7\", \"F#7\", \"G7\", \"G#7\"\r\n]\r\n\r\nconst translateFlats = (note) => {\r\n    let res = note\r\n    const ref = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"]\r\n    if (note.includes(\"b\")) {\r\n        res = \"\"\r\n        if (note[0] != \"A\") {\r\n            res += ref[ref.indexOf(note[0]) - 1]\r\n        } else {\r\n            res += \"G\"\r\n        }\r\n        res += \"G\"\r\n        res += note[2]\r\n    }\r\n    \r\n    return res\r\n}\r\n\r\nconst flatToSharp = (song) => {\r\n    let res = []\r\n    for(let note of song) {\r\n        res.push([translateFlats(note[0]), note[1]])\r\n    }\r\n    return res\r\n}\r\n\r\nconst noteToIndex = (note, root) => {\r\n    const rootIndex = notes.indexOf(root+\"3\")\r\n    const noteIndex = notes.indexOf(note)\r\n    return noteIndex - rootIndex\r\n}\r\n\r\nexport const convertToIndex = (song, root) => {\r\n    let res = []\r\n    let obj = flatToSharp(song)\r\n        \r\n    for (let i of obj) {\r\n        if(i[0] != \"rest\") {\r\n            res.push([noteToIndex(i[0], root), i[1]])\r\n        } else {\r\n            res.push([(noteToIndex(obj[1][0], root))])\r\n        }\r\n    }\r\n\r\n    return res\r\n}","import { shuffle } from \"../js/general\"\r\n\r\n\r\nexport const lengthCalc = (barCount) => {\r\n    // const lengths = [1, 1/2, 1/4, 1/8, 1/2+1/4, 1/4+1/8]\r\n    // const lengthsInFrequency = [1/8, 1/4, 1/4+1/8, 1/2, 1/2+1/4, 1]\r\n    let lengths = [1/8, 1/4, 1/4+1/8, 1/2, 1/2+1/4, 1]\r\n\r\n\r\n    // explanation\r\n    // 8*x + 4*y + 2*z = 8\r\n    // range of x = 0 ~ 1 .  x = random(0 or 1)-> x = 0\r\n    // 4*y + 2*z = 8 - 8*x -> 4*y + 2*z = 8 . range of y = 0 ~ 2. y= random(0 or 1 or 2)-> y = 1\r\n    // 2*z = 8 - 4*y -> 2*z = 4 -> z=2 -> x=0, y=1, z=2 -> {[y, z, z]} -> randomSort([y, z, z]) -> [z, y, z]\r\n    // for num in [z, y, z] -> pick each note for num -> {A5:z, G#4:y, C5:z} (y->whole note, z->quarter note)\r\n\r\n    const totalLength = barCount\r\n\r\n    let finalList = []\r\n\r\n    let total = totalLength\r\n    let i = 0\r\n    while (total) {\r\n        let maxRange = Math.trunc(total/lengths[i])\r\n        let count = Math.floor(Math.random() * (maxRange+1))\r\n\r\n        let a = count\r\n        while (a > 0) {\r\n            finalList.push(lengths[i])\r\n             a -= 1\r\n        }\r\n\r\n        total -= count*lengths[i]\r\n        i += 1\r\n    }\r\n\r\n    const sumRemainder = (array) => {\r\n        let finalCount = 0\r\n        array.forEach(num => {\r\n            finalCount += num\r\n        })\r\n        if (finalCount < totalLength) {\r\n            array.push(totalLength - finalCount)\r\n        }\r\n    }\r\n\r\n    sumRemainder(finalList)\r\n\r\n    return shuffle(finalList)\r\n}\r\n\r\n\r\n// let generatedList = bpm 83\r\n//         [[\"B4\", 2],\r\n//          [\"rest\", 1],\r\n//          [\"A4\", 1.5],\r\n//          [\"A4\", 1.5],\r\n//          [\"C3\", 0.5],\r\n//          [\"rest\", 0.5],\r\n//          [\"E3\", 0.25],\r\n//          [\"E3\", 1],\r\n//          [\"E3\", 0.5],\r\n//          [\"B4\", 1],\r\n//          [\"rest\", 2],\r\n//          [\"rest\", 0.5],\r\n//          [\"F3\", 1],\r\n//          [\"F3\", 0.5],\r\n//          [\"B4\", 0.25],\r\n//          [\"rest\", 0.5],\r\n//          [\"C3\", 1.5],\r\n//          [\"E3\", 1],\r\n//          [\"F3\", 0.5],\r\n//          [\"A4\", 1.5],\r\n//          [\"G3\", 0.5],\r\n//          [\"rest\", 0.5]]","const notes = [\r\n    \"A2\", \"A#2\", \"B2\", \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \r\n    \"A3\", \"A#3\", \"B3\", \"C3\", \"C#3\", \"D3\", \"D#3\", \"E3\", \"F3\", \"F#3\", \"G3\", \"G#3\",\r\n    \"A4\", \"A#4\", \"B4\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\",\r\n    \"A5\", \"A#5\", \"B5\", \"C5\",\"C#5\", \"D5\", \"D#5\", \"E5\", \"F5\", \"F#5\", \"G5\", \"G#5\",\r\n    \"A6\", \"A#6\", \"B6\", \"C6\", \"C#6\", \"D6\", \"D#6\", \"E6\", \"F6\", \"F#6\", \"G6\", \"G#6\",\r\n    \"A7\", \"A#7\", \"B7\", \"C7\", \"C#7\", \"D7\", \"D#7\", \"E7\", \"F7\", \"F#7\", \"G7\", \"G#7\"\r\n]\r\n\r\n// const majorScale = [\r\n    // \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"\r\n    // 0, 2, 4, 5, 7, 9, 11, 12\r\n// ]\r\n\r\nconst scales = {\r\n    \"none\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\r\n    \"majorScale\": [0, 2, 4, 5, 7, 9, 11],\r\n    \"minorScale\": [0, 2, 3, 5, 7, 8, 10],\r\n    \"majorPentatonic\": [0, 2, 4, 7, 9],\r\n    \"minorPentatonic\": [0, 3, 5, 7, 10],\r\n    \"harmonicMinor\": [0, 2, 3, 5, 7, 8, 11],\r\n    \"harmonicMajor\": [0, 2, 4, 5, 7, 8, 11]\r\n}\r\n\r\n// ex: getScale(\"majorScale\", \"C\", [2, 4])\r\n    \r\nexport function getScale(scale, key, noteRange = [3, 5]) {\r\n\r\n    let res = []\r\n    const root = key + noteRange[0]\r\n    let startIndex = notes.indexOf(root)\r\n    let nums = [...scales[scale]]\r\n    const octabes = Math.abs(noteRange[1] - noteRange[0])\r\n\r\n    let i = 0\r\n    while (i <= octabes-1) {\r\n        nums.forEach(num => nums.push(num + i*12))\r\n        i += 1\r\n    }\r\n    nums.push(octabes*12)\r\n\r\n    i = 0\r\n    while (i < nums.length) {\r\n        res.push(notes[startIndex + nums[i]])\r\n        i += 1\r\n    }\r\n    return res\r\n}","import { lengthCalc } from './lengthCalc.js';\r\nimport { getScale } from './scales.js';\r\nimport { getRandom } from '../js/general.js';\r\n\r\nconst setDefault = (settings) => {\r\n\r\n  const scales = [\r\n    \"majorScale\", \"minorScale\", \"majorPentatonic\", \"minorPentatonic\", \"harmonicMinor\", \"harmonicMajor\",\r\n    \"majorScale\", \"minorScale\"\r\n  ]\r\n  const keys = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"G\", \"G#\", \"A\", \"A#\", \"B\"]\r\n  \r\n  const scale = settings[\"scale\"] == \"random\" ? scales[Math.floor(Math.random() * scales.length)] : settings[\"scale\"]\r\n  const key = settings[\"key\"] == \"random\" ? keys[Math.floor(Math.random() * keys.length)] : settings[\"key\"]\r\n  const bpm = settings[\"bpm\"] == \"random\" ? Math.floor(Math.random() * (130 - 90) + 90) : settings[\"bpm\"]\r\n  const selectedNotes = settings[\"selectedNotes\"] == \"None\" ? null : settings[\"selectedNotes\"]\r\n  const rest = settings[\"rest\"]\r\n  const length = settings[\"length\"]\r\n\r\n  return {\"scale\": scale, \"key\": key, \"bpm\": bpm, \"selectedNotes\": selectedNotes, \"rest\": rest, \"length\": length}\r\n}\r\n\r\nexport function createSong(settings) {\r\n\r\n  let s = setDefault(settings)\r\n\r\n  let song = []\r\n\r\n  let lengthArr = lengthCalc(s[\"length\"])\r\n  // set unique notes\r\n  let achivedScale = getRandom(getScale(s[\"scale\"], s[\"key\"]), 5)\r\n  let notesArr = \r\n    s[\"selectedNotes\"] || achivedScale\r\n\r\n\r\n  s[\"rest\"] ? notesArr.push(\"rest\") :\r\n\r\n  lengthArr.forEach(l => {\r\n    song.push([notesArr[Math.floor(Math.random() * notesArr.length)], l])\r\n  })\r\n\r\n  // const ID = date()*Ddfadmfam*Dfadgin*dgnodadonaodn\r\n\r\n  let res = {\"song\": song, \"bpm\": s[\"bpm\"], \"details\": {\"scale\": s[\"scale\"], \"key\": s[\"key\"]}}\r\n\r\n  console.log(res)\r\n  return res\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Tone from 'tone';\r\n// material-ui\r\nimport Button from '@material-ui/core/Button'\r\n// css\r\nimport './music-player-main.css';\r\n\r\nexport function MusicPlayer(props) {\r\n\r\n    let song = props.song\r\n\r\n    const playpause = useRef()\r\n    const item = useRef()\r\n    const detailsIcon = useRef()\r\n    const details = useRef()\r\n    const onOffDetails = useRef()\r\n    const heart = useRef()\r\n    // create these functions in different js file\r\n    const progressContainer = useRef()\r\n    const progressBar = useRef()\r\n    // traversy media\r\n    // progressPercent = (currentTime/songLength) * 100\r\n    // progressBar.style.width = progressPercent\r\n    // ================================================\r\n    const synth = new Tone.Synth().toDestination()\r\n\r\n    const sampler = new Tone.Sampler({\r\n        urls: {\r\n            A1: \"A1.mp3\",\r\n            A2: \"A2.mp3\",\r\n        },\r\n        baseUrl: \"https://tonejs.github.io/audio/casio/\",\r\n    }).toDestination();\r\n    \r\n    // const checkSound = () => {\r\n    //     // synth.triggerAttackRelease(\"8n\", 1)\r\n    //     sampler.triggerAttackRelease(\"C3\", \"8n\", now)\r\n    //     sampler.triggerAttackRelease(\"C4\", \"8n\", now+1)\r\n    // }\r\n\r\n    // ===================================================-\r\n   \r\n    const bpmCalc = (bpm) => {\r\n        const timeForEachBeat = 1/(bpm/60)\r\n        // const timeForEachBeat = Math.round(1/(bpm/60) * 1000) / 1000\r\n        return timeForEachBeat\r\n    }\r\n\r\n    const calcSongLength= (bpm) =>{\r\n        const totalBeat = 8*4\r\n        let songLength = totalBeat * (1/(bpm/60))\r\n\r\n        let currentBeat = 0\r\n        let songProgress = (currentBeat/totalBeat)*100\r\n\r\n        // let songTime = songLength  -> progressBar goes to 0 ~ 100% in songTime seconds\r\n\r\n        return songLength\r\n\r\n    }\r\n\r\n\r\n    function playSong(song) {\r\n        const now = Tone.now()\r\n\r\n        playpause.current.classList.add(\"playing\")\r\n        playpause.current.querySelector(\"i.fas\").classList.remove(\"fa-play\")\r\n        playpause.current.querySelector(\"i.fas\").classList.add(\"fa-pause\")\r\n\r\n        // adjust bpm to length object\r\n        let bpm = song[\"bpm\"]/4\r\n        Tone.Transport.bpm.value = bpm\r\n\r\n        let i = 0\r\n        let timeSum = 0\r\n        while (i < song[\"song\"].length && playpause.current.classList.contains(\"playing\")) {\r\n            if (song[\"song\"][i][0] != \"rest\") {\r\n                synth.triggerAttackRelease(song[\"song\"][i][0], (bpmCalc(bpm))*song[\"song\"][i][1], now+timeSum)\r\n                // sampler.triggerAttackRelease(song[i][0], (bpmCalc(bpm))*song[i][1], now+timeSum)\r\n            } \r\n            timeSum += (bpmCalc(bpm))*song[\"song\"][i][1]\r\n            i += 1\r\n        }\r\n        // while (playpause.current.classList.contains(\"playing\")) {\r\n            // song[\"song\"].map(s => {\r\n            //     synth.triggerAttackRelease(s[0], (bpmCalc(bpm))*s[1], now+timeSum)\r\n            //     timeSum += (bpmCalc(bpm))*s[1]\r\n            // })\r\n        // }\r\n    }\r\n\r\n    function pauseSong() {\r\n        playpause.current.classList.remove(\"playing\")\r\n        playpause.current.querySelector(\"i.fas\").classList.remove(\"fa-pause\")\r\n        playpause.current.querySelector(\"i.fas\").classList.add(\"fa-play\")\r\n    }\r\n\r\n    function playPause(song) {\r\n        const isPlaying = playpause.current.classList.contains('playing')\r\n        if (isPlaying)  pauseSong() \r\n        else  playSong(song) \r\n    }\r\n\r\n    // ======= progresss bar===========\r\n\r\n    // function updateProgress(e) {\r\n    //     const { duration, currentTime } = e.srcElement;\r\n    //     const progressPercent = (currentTime / duration) * 100;\r\n    //     progress.style.width = `${progressPercent}%`;\r\n    // }\r\n    \r\n    // Set progress bar\r\n    function setProgress(clientWidth, offsetX) {\r\n        const width = clientWidth;\r\n        const clickX = offsetX;\r\n        const progressPercent = (clickX/width)*100\r\n        progressBar.current.style.width = `${progressPercent}%`;\r\n\r\n        console.log(width, clickX, progressPercent)\r\n        // const duration = audio.duration;\r\n        \r\n        // audio.currentTime = (clickX / width) * duration;\r\n    }\r\n\r\n    // // Time/song update\r\n    // audio.addEventListener('timeupdate', updateProgress);\r\n\r\n    // // Click on progress bar\r\n    // progressContainer.addEventListener('click', setProgress);\r\n\r\n    // // Song ends\r\n    // audio.addEventListener('ended', nextSong);\r\n\r\n    // // Time of song\r\n    // audio.addEventListener('timeupdate',DurTime);\r\n\r\n    // ======================================================\r\n\r\n    const toggleDetails = () => {\r\n        const isShown = detailsIcon.current.classList.contains('showing')\r\n        if (isShown) {\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.remove(\"fa-caret-up\")\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.add(\"fa-caret-down\")\r\n            detailsIcon.current.classList.remove(\"showing\")\r\n            \r\n            // details.current.style.transform = \"translateY(-50%)\"\r\n            // details.current.style.opacity = \"0\"\r\n            // setInterval(() => {\r\n                details.current.style.display = \"none\"\r\n            // }, 300)\r\n        } else {\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.remove(\"fa-caret-down\")\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.add(\"fa-caret-up\")\r\n            details.current.style.display = \"block\"\r\n            detailsIcon.current.classList.add(\"showing\")\r\n        }\r\n    }\r\n\r\n    const deleteSong = (song, createdSongs, setCreatedSongs) => {\r\n        let tmp = [...createdSongs]\r\n        let index = createdSongs.indexOf(song)\r\n        if (index > -1) {\r\n            tmp.splice(index, 1);\r\n        }\r\n        setCreatedSongs(tmp)\r\n    }\r\n\r\n    const likeSong = (song, likedSongs, setLikedSongs, heartIcon) => {\r\n        heartIcon.classList.add(\"liked\")\r\n        heartIcon.classList.remove(\"far\")\r\n        heartIcon.classList.add(\"fas\")\r\n        setLikedSongs([song, ...likedSongs])\r\n    }\r\n\r\n    const unLikeSong = (song, likedSongs, setLikedSongs, heartIcon) => {\r\n        // if (song[\"ID\"] in likedSongs)\r\n        let index = likedSongs.indexOf(song)\r\n        let tmp = [...likedSongs]\r\n        if (index > -1) {\r\n            tmp.splice(index, 1);\r\n        }\r\n        heartIcon.classList.remove(\"liked\")\r\n        heartIcon.classList.remove(\"fas\")\r\n        heartIcon.classList.add(\"far\")\r\n        setLikedSongs(tmp)\r\n    }\r\n\r\n    const toggleLike = (song, likedSongs, setLikedSongs) => {\r\n        let liked = heart.current.classList.contains('liked')\r\n        let heartIcon = heart.current.querySelector('i.fa-heart')\r\n\r\n        if (liked) {\r\n            unLikeSong(song, likedSongs, setLikedSongs, heartIcon)\r\n            console.log(liked)\r\n        } else {\r\n            likeSong(song, likedSongs, setLikedSongs, heartIcon)\r\n            console.log(liked)\r\n        }\r\n        console.log(likedSongs)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"music-player-item\">\r\n            <div className=\"song-number\"><p>{props.createdSongs.length  - props.createdSongs.indexOf(props.song)}.</p></div>\r\n            <div className=\"song-name\"></div>\r\n            <div className=\"play-pause-container\">\r\n                <div className=\"play-pause\" ref={ playpause } onClick={() => playPause(song)}>\r\n                    <button className=\"play-pause-button\"><i className=\"fas fa-play\"></i></button>\r\n                    {/* <button className=\"play-pause play\" ref={ playpause } onClick={() => ring(song)}><i className=\"fas fa-play\"></i></button> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"progress-container\" ref={ progressContainer } onClick={(e) => setProgress(e.target.clientWidth, e.target.offsetX)}>\r\n                <div className=\"progress\" ref={ progressBar }></div>\r\n            </div>\r\n            <div className=\"song-details-container\">\r\n                <div className=\"details-i-container\" ref={ detailsIcon } onClick={()=> toggleDetails()}>\r\n                    <input ref={ onOffDetails } type=\"checkbox\" className=\"on-off-details\" />\r\n                    <i className=\"fas fa-caret-down\"></i>\r\n                </div>\r\n                <div ref={ details } className=\"song-details\">\r\n                    <p>scale: {song[\"details\"][\"scale\"]}</p>\r\n                    <p>key: {song[\"details\"][\"key\"]}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"player-menu\">\r\n                {/* <p>delete button should be shown initially cause its frequently used</p> */}\r\n                {/* <div className=\"toggle-player-menu\"><i className=\"fas fa-ellipsis-v\"></i></div> */}\r\n                <div className=\"player-menu-holder\">\r\n                    <div className=\"player-menu-item like-unlike\" ref={heart} onClick={ () => toggleLike(song, props.likedSongs, props.setLikedSongs) }><i className=\"far fa-heart\"></i></div>\r\n                    <div className=\"player-menu-item\" onClick={ () => deleteSong(song, props.createdSongs, props.setCreatedSongs) }><i className=\"fas fa-trash\"></i></div>\r\n                    <div className=\"player-menu-item\"><i className=\"fas fa-edit\"></i></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        // ====================================--\r\n        // <div className=\"music-player-item\">\r\n        //     <div className=\"music-player-wrapper\" ref={ item }>\r\n        //         <div className=\"music-player\">\r\n        //             <div className=\"play-pause-container\">\r\n        //                 <div className=\"play-pause\" ref={ playpause } onClick={() => playPause(song)}>\r\n        //                     <button className=\"play-pause-button\"><i className=\"fas fa-play\"></i></button>\r\n        //                     {/* <button className=\"play-pause play\" ref={ playpause } onClick={() => ring(song)}><i className=\"fas fa-play\"></i></button> */}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className=\"progress-container\" ref={ progressContainer } onClick={(e) => setProgress(e.target.clientWidth, e.target.offsetX)}>\r\n        //                 <div className=\"progress\" ref={ progressBar }></div>\r\n        //             </div>\r\n        //             <button className=\"like-unlike unliked\"><i className=\"far fa-heart\"></i></button>\r\n        //         </div>\r\n        //         <div className=\"song-details-container\">\r\n        //             <div className=\"details-i-container\" ref={ detailsIcon } onClick={()=> toggleDetails()}>\r\n        //                 <input ref={ onOffDetails } type=\"checkbox\" className=\"on-off-details\" />\r\n        //                 <i className=\"fas fa-caret-down\"></i>\r\n        //             </div>\r\n        //             <div ref={ details } className=\"song-details\">\r\n        //                 <p>scale: {song[\"details\"][\"scale\"]}</p>\r\n        //                 <p>key: {song[\"details\"][\"key\"]}</p>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        //     <div className=\"player-menu\">\r\n        //         {/* <p>delete button should be shown initially cause its frequently used</p> */}\r\n        //         {/* <div className=\"toggle-player-menu\"><i className=\"fas fa-ellipsis-v\"></i></div> */}\r\n        //         <div className=\"player-menu-holder\">\r\n        //             <div className=\"player-menu-item\" ref={heart} onClick={ () => toggleLike(song, props.likedSongs, props.setLikedSongs) }><i className=\"far fa-heart\"></i></div>\r\n        //             <div className=\"player-menu-item\" onClick={ () => deleteSong(song, props.createdSongs, props.setCreatedSongs) }><i className=\"fas fa-trash\"></i></div>\r\n        //             <div className=\"player-menu-item\"><i className=\"fas fa-edit\"></i></div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n\r\n        // // <div className=\"music-player\">\r\n        // //     <div className=\"navigation\">\r\n        // //         <button id=\"prev\" className=\"action-btn\"><i className=\"fas fa-backward\"></i></button>\r\n        // //         <button id=\"play\" className=\"play-pause play action-btn action-btn-big\" onClick={() => ring(song)}><i className=\"fas fa-play\"></i></button>\r\n        // //         {/* <i class=\"fas fa-pause\"></i> */}\r\n        // //         <button id=\"next\" className=\"action-btn\"><i className=\"fas fa-forward\" onClick={() => checkSound()}></i></button>\r\n        // //     </div>\r\n        // //     <div className=\"progress-container\">\r\n        // //         <div className=\"progress\" ref={ progressBar }></div>\r\n        // //     </div>\r\n        // //     <button className=\"like-unlike unliked\"><i className=\"far fa-heart\"></i></button>\r\n        // //     {/* <i class=\"fas fa-heart\"></i> */}\r\n        // // </div>\r\n    )\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\nexport function Settings (props) {\r\n\r\n    let customSettings = props.customSettings\r\n    const setCustomSettings = props.setCustomSettings\r\n\r\n    const mouseCursor = useRef()\r\n    const settingCard = useRef()\r\n    const selectors = useRef()\r\n    const applySettingsButton = useRef()\r\n    const selectScale = useRef()\r\n    const selectKey = useRef()\r\n\r\n    const applySettings = () => {\r\n        let list = [selectScale.current.value, selectKey.current.value]\r\n\r\n        let defaultValue = [\"random\", \"random\"]\r\n        let i = 0\r\n        while (i < list.length) {\r\n            list[i] = (list[i] != \"random\") ? list[i] : defaultValue[i]\r\n            i += 1\r\n        }\r\n\r\n        let settings = {...customSettings}\r\n        settings[\"scale\"] = list[0]\r\n        settings[\"key\"] = list[1]\r\n        setCustomSettings(settings)\r\n\r\n        hideSelectors()\r\n    }\r\n\r\n    const cursor = (e) => {\r\n        mouseCursor.current.style.display = \"block\"\r\n        mouseCursor.current.style.top = e.pageY + \"px\"\r\n        mouseCursor.current.style.left = e.pageX + \"px\"\r\n    }\r\n\r\n    const hideCursor = () => {\r\n        mouseCursor.current.style.display = \"none\"\r\n    }\r\n\r\n    const showSelectors = () => {\r\n        settingCard.current.style.display = \"none\"\r\n        selectors.current.style.display = \"flex\"\r\n    }\r\n\r\n    const hideSelectors = () => {\r\n        settingCard.current.style.display = \"flex\"\r\n        selectors.current.style.display = \"none\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"custom-settings\">\r\n            <div ref={ mouseCursor } className=\"cursor\"></div>\r\n            <div className=\"setting-card\" ref={settingCard} onMouseMove={(e) => cursor(e)} onMouseLeave={() => hideCursor()} onClick={() => showSelectors()}>\r\n                <i className=\"fas fa-cog\"></i>\r\n                <p><span>Login</span> or <span>Sign up for Free</span> to unlock custom settings!</p>\r\n            </div>\r\n            <div ref={selectors} className=\"selectors\" onMouseMove={(e) => cursor(e)} onMouseLeave={() => hideCursor()}>\r\n                <label>scale : </label>\r\n                <select ref={ selectScale } name=\"scale\" id=\"scale\">\r\n                    <option value=\"random\">random</option>\r\n                    <option value=\"none\">None</option>\r\n                    <option value=\"majorScale\">Major</option>\r\n                    <option value=\"minorScale\">Minor</option>\r\n                    <option value=\"majorPentatonic\">Major Pentatonic</option>\r\n                    <option value=\"minorPentatonic\">Minor Pentatonic</option>\r\n                    <option value=\"harmonicMajor\">Harmonic Major</option>\r\n                    <option value=\"harmonicMinor\">Harmonic Minor</option>\r\n                </select>\r\n                <label>key : </label>\r\n                <select ref={ selectKey } name=\"key\" id=\"key\">\r\n                    <option value=\"random\">random</option>\r\n                    <option value=\"C\">C</option>\r\n                    <option value=\"C#\">C#</option>\r\n                    <option value=\"D\">D</option>\r\n                    <option value=\"D#\">D#</option>\r\n                    <option value=\"E\">E</option>\r\n                    <option value=\"F\">F</option>\r\n                    <option value=\"F#\">F#</option>\r\n                    <option value=\"G\">G</option>\r\n                    <option value=\"G#\">G#</option>\r\n                    <option value=\"A\">A</option>\r\n                    <option value=\"A#\">A#</option>\r\n                    <option value=\"B\">B</option>\r\n                </select>\r\n\r\n                <div ref={ applySettingsButton } className=\"apply-settings\" onClick={() => applySettings()}>\r\n                    <p><i className=\"fas fa-sliders-h\"></i> apply settings</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// material-uis\r\nimport Button from '@material-ui/core/Button'\r\n// import from files\r\nimport { Settings } from './settings'\r\n\r\n\r\nexport function Laboratory (props) {\r\n\r\n\r\n    const laboratory = useRef()\r\n\r\n    const toggleMenu = (menu) => {\r\n        laboratory.current.querySelector(`.side-menu.selected`).classList.remove(\"selected\")\r\n        laboratory.current.querySelector(`.selected-item.selected`).classList.remove(\"selected\")\r\n        laboratory.current.querySelector(`.side-menu.${menu}`).classList.add(\"selected\")\r\n        laboratory.current.querySelector(`.selected-item.${menu}`).classList.add(\"selected\")\r\n    }\r\n\r\n    return(\r\n        <div className=\"laboratory\" ref={laboratory}>\r\n            <section className=\"side-bar\">\r\n                <div className=\"side-menu settings selected\" onClick={() => toggleMenu(\"settings\")}>Settings</div>\r\n                <div className=\"side-menu editor\" onClick={() => toggleMenu(\"editor\")}>Editor</div>\r\n                <div className=\"side-menu tones\" onClick={() => toggleMenu(\"tones\")}>Tones</div>\r\n                <div className=\"side-menu likedSongs\" onClick={() => toggleMenu(\"likedSongs\")}>Liked Songs</div>\r\n                <div className=\"side-menu faq\">--</div>\r\n                <div className=\"side-menu faq\">--</div>\r\n                <div className=\"side-menu about\"><i className=\"fas fa-building\"></i>About</div>\r\n                <div className=\"side-menu faq\"><i className=\"fas fa-question-circle\"></i>FAQ</div>\r\n            </section>\r\n            <div className=\"selected-menu\">\r\n                <div className=\"selected-item settings selected\">\r\n                    <Settings customSettings={props.customSettings} setCustomSettings={props.setCustomSettings}></Settings>\r\n                </div>\r\n                <div className=\"selected-item editor\">aafdssd</div>\r\n                <div className=\"selected-item tones\">false</div>\r\n                <div className=\"selected-item likedSongs\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport const getCoordinates = (obj) => {\r\n    const canvasWidth = 500\r\n    const canvasHeight = 300\r\n\r\n    let res = []\r\n\r\n    let totalLength = 0\r\n    for (let i of obj) {\r\n        if (obj.indexOf(i) != obj.length - 1) {\r\n            totalLength += i[1]\r\n        }\r\n    }\r\n\r\n\r\n    let lowest = 1000\r\n    let highest = 0\r\n    for (let i of obj) {\r\n        if (i[0] < lowest) {\r\n            lowest = i[0]\r\n        }\r\n        if (i[0] > highest) {\r\n            highest = i[0]\r\n        }\r\n    }\r\n\r\n    let maxDiff = highest - lowest\r\n\r\n    let heightForNote = (canvasHeight-70)/maxDiff\r\n    let widthForNote = (canvasWidth-70)/totalLength\r\n    let startCoordinate = [20, 20]\r\n\r\n    for (let i of obj) {\r\n        let coordinate = new Array(2)\r\n        coordinate[1] = canvasHeight -  (startCoordinate[1] + (i[0] - lowest)*heightForNote)\r\n        coordinate[0] = startCoordinate[0]\r\n        startCoordinate[0] += widthForNote*i[1]\r\n\r\n        res.push({note: i, coordinate})\r\n    }\r\n\r\n    console.log(res)\r\n    return res\r\n}\r\n\r\nexport const draw = (ctx, obj) => {\r\n\r\n    let currentCoordinate = [obj[0].coordinate[0], obj[0].coordinate[1]]\r\n\r\n    // circle of start point\r\n    ctx.fillStyle = 'rgb(249, 150, 51)'\r\n    ctx.beginPath()\r\n    ctx.arc(obj[0].coordinate[0], obj[0].coordinate[1], 5, 0, 2*Math.PI)\r\n    ctx.fill()\r\n\r\n    for (let i of obj) {\r\n        if (obj.indexOf(i) != 0) {\r\n\r\n            let x = i.coordinate[0]\r\n            let y = i.coordinate[1]\r\n            \r\n            ctx.moveTo(currentCoordinate[0], currentCoordinate[1])\r\n            ctx.lineTo(x, y)\r\n            ctx.stroke()\r\n\r\n            currentCoordinate = [x, y]\r\n\r\n            // circle\r\n            ctx.fillStyle = 'rgb(249, 150, 51)'\r\n            ctx.beginPath()\r\n            ctx.arc(x, y, 5, 0, 2*Math.PI)\r\n            ctx.fill()\r\n        }\r\n    }\r\n\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// css\r\nimport '../css/graph.css';\r\n// file \r\nimport { getCoordinates, draw } from '../generator/analyze/graph-visualizer';\r\nimport { convertToIndex } from './general';\r\n\r\n\r\nexport const Canvas = (props) => {\r\n    const canvasRef = useRef()\r\n\r\n    let song = convertToIndex(props.song[\"song\"], props.song[\"details\"][\"key\"])\r\n    \r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        let ctx = canvas.getContext(\"2d\");\r\n        \r\n        //draw come here\r\n        draw(ctx, getCoordinates(song))\r\n    }, [draw])\r\n\r\n    return(\r\n        <div className=\"canvas-container\">\r\n            <canvas className=\"canvas\" ref={canvasRef} width=\"500\" height=\"300\"></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Graph (props) {\r\n\r\n    const getCanvas = () => {\r\n        return (\r\n            props.songs.map(song => {\r\n                return (\r\n                    <Canvas song={song} key={song.song}></Canvas>\r\n        )}))\r\n    }\r\n\r\n    return(\r\n        <div className=\"graph\">\r\n            { getCanvas() }\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// css\r\nimport '../../css/graph.css';\r\n// file \r\nimport { Canvas } from '../../js/graph';\r\n\r\n\r\n// test\r\nconst testList = [\r\n    \r\n]\r\n\r\n\r\nexport function TestGraphs (props) {\r\n\r\n    const getCanvas = () => {\r\n        return (\r\n            testList.map(song => {\r\n                return (\r\n                    <Canvas song={song.song} key={song.song}></Canvas>\r\n        )}))\r\n    }\r\n\r\n    return(\r\n        <div className=\"graph\">\r\n            { getCanvas() }\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Tone from 'tone';\r\n//  import from file\r\nimport { createSong } from './generator/createSong';\r\nimport { MusicPlayer } from './music-player/music-player'\r\nimport { Laboratory } from \"./js/laboratory\"\r\nimport { Graph } from './js/graph';\r\nimport { convertToIndex } from './js/general';\r\nimport { TestGraphs } from './generator/analyze/seeGraphs';\r\n// material-ui\r\nimport Button from '@material-ui/core/Button'\r\n// css\r\nimport './css/main.css';\r\n\r\n\r\nexport function Main() {\r\n\r\n    const [createdSongs, setCreatedSongs] = useState([])\r\n\r\n    const [customSettings, setCustomSettings] = useState({\r\n        \"length\": \"4\", \"scale\": \"random\", \"key\": \"random\", \"rest\": false, \"bpm\": \"random\", \"selectedNotes\": \"None\"\r\n    })\r\n    const [likedSongs, setLikedSongs] = useState([])\r\n\r\n\r\n    const generateSong = (customSettings) => {\r\n        const song = createSong(customSettings)\r\n        setCreatedSongs([song, ...createdSongs])\r\n    }\r\n\r\n\r\n    const MusicPlayers = () => {\r\n        if (createdSongs.length > 0) {\r\n            return (\r\n                createdSongs.map(song => {\r\n                    return (\r\n                        <MusicPlayer song={song} createdSongs={createdSongs} setCreatedSongs={setCreatedSongs}\r\n                        likedSongs={likedSongs} setLikedSongs={setLikedSongs} key={song.song}></MusicPlayer>\r\n            )}))\r\n        } else {\r\n            return (\r\n                <div className=\"empty-player\">\r\n                    <p>Click the Generate button to create music!</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"top-menu\">\r\n                <h1>Music Genarator AI</h1>\r\n                <div className=\"top-menu-items\">\r\n                    <div className=\"top-menu-item login\"><i className=\"fas fa-sign-in-alt\"></i>Login</div>\r\n                    <div className=\"top-menu-item account\"><i className=\"fas fa-user-circle\"></i>Account</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"thin-line\"></div>\r\n            <div className=\"music\">\r\n                <div className=\"laboratory-container\">\r\n                    <Laboratory customSettings={customSettings} setCustomSettings={setCustomSettings}>\r\n                    </Laboratory>\r\n                </div>\r\n\r\n                <div className=\"music-player-container\">\r\n                    <div className=\"generator-button-container\">\r\n                        <Button variant=\"contained\" className=\"generator-button\" onClick={() => generateSong(customSettings)}>\r\n                            GENERATE\r\n                        </Button>\r\n                    </div>\r\n                    <MusicPlayers></MusicPlayers>\r\n                     {/* <div className=\"generator-button-container\" onClick={() => generateSong()}>\r\n                        <Button variant=\"contained\" className=\"generator-button2\">\r\n                        GENERATE\r\n                        </Button>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            <Graph songs={createdSongs}></Graph>\r\n            <TestGraphs></TestGraphs>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//  import from file\r\nimport { Main } from './main/main'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"app\">\r\n        <Main />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// ========================================\r\n// ====  USE STRICTMODE?     ======================\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n"],"sourceRoot":""}