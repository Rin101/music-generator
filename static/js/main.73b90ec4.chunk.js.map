{"version":3,"sources":["js/scales.js","js/createSong.js","js/lengthCalc.js","js/music-player.js","js/settings.js","js/layout.js","index.js"],"names":["notes","scales","createSong","settings","s","keys","Math","floor","random","length","setDefault","song","lengthArr","barCount","lengths","totalLength","finalList","total","i","maxRange","trunc","count","a","push","array","finalCount","forEach","num","sumRemainder","temporaryValue","randomIndex","currentIndex","shuffle","lengthCalc","notesArr","scale","key","noteRange","res","root","startIndex","indexOf","nums","octabes","abs","getScale","l","console","log","MusicPlayer","props","playpause","useRef","item","detailsIcon","details","progressContainer","progressBar","synth","Tone","toDestination","bpmCalc","urls","A1","A2","baseUrl","bpm","playPause","current","classList","contains","remove","querySelector","add","now","value","timeSum","triggerAttackRelease","playSong","className","ref","onClick","e","clientWidth","offsetX","width","clickX","progressPercent","style","setProgress","target","display","Settings","customSettings","setCustomSettings","mouseCursor","settingCard","selectors","applySettingsButton","selectScale","selectKey","cursor","top","pageY","left","pageX","hideCursor","hideSelectors","onMouseMove","onMouseLeave","name","id","list","defaultValue","applySettings","Generator","useState","createdSongs","setCreatedList","MusicPlayers","map","Button","variant","generateSong","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73b90ec4.chunk.js","sourcesContent":["const notes = [\r\n    \"A2\", \"A#2\", \"B2\", \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \r\n    \"A3\", \"A#3\", \"B3\", \"C3\", \"C#3\", \"D3\", \"D#3\", \"E3\", \"F3\", \"F#3\", \"G3\", \"G#3\",\r\n    \"A4\", \"A#4\", \"B4\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\",\r\n    \"A5\", \"A#5\", \"B5\", \"C5\",\"C#5\", \"D5\", \"D#5\", \"E5\", \"F5\", \"F#5\", \"G5\", \"G#5\",\r\n    \"A6\", \"A#6\", \"B6\", \"C6\", \"C#6\", \"D6\", \"D#6\", \"E6\", \"F6\", \"F#6\", \"G6\", \"G#6\",\r\n    \"A7\", \"A#7\", \"B7\", \"C7\", \"C#7\", \"D7\", \"D#7\", \"E7\", \"F7\", \"F#7\", \"G7\", \"G#7\"\r\n]\r\n\r\n// const majorScale = [\r\n    // \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"\r\n    // 0, 2, 4, 5, 7, 9, 11, 12\r\n// ]\r\n\r\nconst scales = {\r\n    \"majorScale\": [0, 2, 4, 5, 7, 9, 11],\r\n    \"minorScale\": [0, 2, 3, 5, 7, 8, 10],\r\n    \"majorPentatonic\": [0, 2, 4, 7, 9],\r\n    \"minorPentatonic\": [0, 3, 5, 7, 10],\r\n    \"harmonicMinor\": [0, 2, 3, 5, 7, 8, 11],\r\n    \"harmonicMajor\": [0, 2, 4, 5, 7, 8, 11]\r\n}\r\n\r\n// ex: getScale(\"majorScale\", \"C\", [2, 4])\r\n    \r\nexport function getScale(scale, key, noteRange = [3, 4]) {\r\n\r\n    let res = []\r\n    const root = key + noteRange[0]\r\n    let startIndex = notes.indexOf(root)\r\n    let nums = [...scales[scale]]\r\n    const octabes = Math.abs(noteRange[1] - noteRange[0])\r\n\r\n    let i = 0\r\n    while (i <= octabes-1) {\r\n        nums.forEach(num => nums.push(num + i*12))\r\n        i += 1\r\n    }\r\n    nums.push(octabes*12)\r\n\r\n    i = 0\r\n    while (i < nums.length) {\r\n        res.push(notes[startIndex + nums[i]])\r\n        i += 1\r\n    }\r\n    return res\r\n}","import { lengthCalc} from './lengthCalc.js';\r\nimport { getScale } from './scales.js';\r\n\r\nconst setDefault = (settings) => {\r\n\r\n  const scales = [\r\n    \"majorScale\", \"minorScale\", \"majorPentatonic\", \"minorPentatonic\", \"harmonicMinor\", \"harmonicMajor\",\r\n    \"majorScale\", \"minorScale\"\r\n  ]\r\n  const keys = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"G\", \"G#\", \"A\", \"A#\", \"B\", \"B#\"]\r\n  \r\n  const scale = settings[\"scale\"] == \"None\" ? scales[Math.floor(Math.random() * scales.length)] : settings[\"scale\"]\r\n  const key = settings[\"key\"] == \"None\" ? keys[Math.floor(Math.random() * keys.length)] : settings[\"key\"]\r\n  const bpm = settings[\"bpm\"] == \"None\" ? Math.floor(Math.random() * (150 - 70) + 70) : settings[\"bpm\"]\r\n  const selectedNotes = settings[\"selectedNotes\"] == \"None\" ? null : settings[\"selectedNotes\"]\r\n  const rest = settings[\"rest\"]\r\n  const length = settings[\"length\"]\r\n\r\n  return {\"scale\": scale, \"key\": key, \"bpm\": bpm, \"selectedNotes\": selectedNotes, \"rest\": rest, \"length\": length}\r\n}\r\n\r\nexport function createSong(settings) {\r\n\r\n  let s = setDefault(settings)\r\n\r\n  let song = []\r\n\r\n  let lengthArr = lengthCalc(s[\"length\"])\r\n  let notesArr = \r\n    s[\"selectedNotes\"] || getScale(s[\"scale\"], s[\"key\"])\r\n\r\n  s[\"rest\"] ? notesArr.push(\"rest\") :\r\n\r\n  lengthArr.forEach(l => {\r\n    song.push([notesArr[Math.floor(Math.random() * notesArr.length)], l])\r\n  })\r\n\r\n  let res = {\"song\": song, \"bpm\": s[\"bpm\"], \"details\": {\"scale\": s[\"scale\"], \"key\": s[\"key\"]}}\r\n\r\n  console.log(res)\r\n  return res\r\n}\r\n","\r\nexport const lengthCalc = (barCount) => {\r\n    const lengths = [1/2, 1, 2, 1+1/2, 1/2, 1/4]\r\n    // const lengths = [8, 4, 3, 1, 2, 1, 1+1/2, 1/2, 1/4]\r\n    const lengthsdic = {\"1n\":4}\r\n\r\n    // explanation\r\n    // 8*x + 4*y + 2*z = 8\r\n    // range of x = 0 ~ 1 .  x = random(0 or 1)-> x = 0\r\n    // 4*y + 2*z = 8 - 8*x -> 4*y + 2*z = 8 . range of y = 0 ~ 2. y= random(0 or 1 or 2)-> y = 1\r\n    // 2*z = 8 - 4*y -> 2*z = 4 -> z=2 -> x=0, y=1, z=2 -> {[y, z, z]} -> randomSort([y, z, z]) -> [z, y, z]\r\n    // for num in [z, y, z] -> pick each note for num -> {A5:z, G#4:y, C5:z} (y->whole note, z->quarter note)\r\n\r\n    const totalLength = barCount*4\r\n\r\n    let finalList = []\r\n\r\n    let total = totalLength\r\n    let i = 0\r\n    while (total) {\r\n        let maxRange = Math.trunc(total/lengths[i])\r\n        let count = Math.floor(Math.random() * (maxRange+1))\r\n\r\n        let a = count\r\n        while (a > 0) {\r\n            finalList.push(lengths[i])\r\n             a -= 1\r\n        }\r\n\r\n        total -= count*lengths[i]\r\n        i += 1\r\n    }\r\n\r\n    const sumRemainder = (array) => {\r\n        let finalCount = 0\r\n        array.forEach(num => {\r\n            finalCount += num\r\n        })\r\n        if (finalCount < totalLength) {\r\n            array.push(totalLength - finalCount)\r\n        }\r\n    }\r\n\r\n    sumRemainder(finalList)\r\n\r\n\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n        while (0 !== currentIndex) {\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n      }\r\n\r\n    return shuffle(finalList)\r\n}\r\n\r\n\r\n// let generatedList = bpm 83\r\n//         [[\"B4\", 2],\r\n//          [\"rest\", 1],\r\n//          [\"A4\", 1.5],\r\n//          [\"A4\", 1.5],\r\n//          [\"C3\", 0.5],\r\n//          [\"rest\", 0.5],\r\n//          [\"E3\", 0.25],\r\n//          [\"E3\", 1],\r\n//          [\"E3\", 0.5],\r\n//          [\"B4\", 1],\r\n//          [\"rest\", 2],\r\n//          [\"rest\", 0.5],\r\n//          [\"F3\", 1],\r\n//          [\"F3\", 0.5],\r\n//          [\"B4\", 0.25],\r\n//          [\"rest\", 0.5],\r\n//          [\"C3\", 1.5],\r\n//          [\"E3\", 1],\r\n//          [\"F3\", 0.5],\r\n//          [\"A4\", 1.5],\r\n//          [\"G3\", 0.5],\r\n//          [\"rest\", 0.5]]","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Tone from 'tone';\r\n// material-ui\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport function MusicPlayer(props) {\r\n\r\n    const playpause = useRef()\r\n    const item = useRef()\r\n    const detailsIcon = useRef()\r\n    const details = useRef()\r\n    // create these functions in different js file\r\n    const progressContainer = useRef()\r\n    const progressBar = useRef()\r\n    // traversy media\r\n    // progressPercent = (currentTime/songLength) * 100\r\n    // progressBar.style.width = progressPercent\r\n    // ================================================\r\n    const synth = new Tone.Synth().toDestination()\r\n\r\n    const sampler = new Tone.Sampler({\r\n        urls: {\r\n            A1: \"A1.mp3\",\r\n            A2: \"A2.mp3\",\r\n        },\r\n        baseUrl: \"https://tonejs.github.io/audio/casio/\",\r\n    }).toDestination();\r\n    \r\n    // const checkSound = () => {\r\n    //     // synth.triggerAttackRelease(\"8n\", 1)\r\n    //     sampler.triggerAttackRelease(\"C3\", \"8n\", now)\r\n    //     sampler.triggerAttackRelease(\"C4\", \"8n\", now+1)\r\n    // }\r\n\r\n    // ===================================================-\r\n   \r\n    const bpmCalc = (bpm) => {\r\n        const timeForEachBeat = 1/(bpm/60)\r\n        // const timeForEachBeat = Math.round(1/(bpm/60) * 1000) / 1000\r\n        return timeForEachBeat\r\n    }\r\n\r\n    const calcSongLength= (bpm) =>{\r\n        const totalBeat = 8*4\r\n        let songLength = totalBeat * (1/(bpm/60))\r\n\r\n        let currentBeat = 0\r\n        let songProgress = (currentBeat/totalBeat)*100\r\n\r\n        // let songTime = songLength  -> progressBar goes to 0 ~ 100% in songTime seconds\r\n\r\n        return songLength\r\n\r\n    }\r\n\r\n\r\n    function playSong(song) {\r\n        const now = Tone.now()\r\n\r\n        playpause.current.classList.add(\"playing\")\r\n        playpause.current.querySelector(\"i.fas\").classList.remove(\"fa-play\")\r\n        playpause.current.querySelector(\"i.fas\").classList.add(\"fa-pause\")\r\n\r\n        let bpm = song[\"bpm\"]\r\n        Tone.Transport.bpm.value = bpm\r\n        let i = 0\r\n        let timeSum = 0\r\n        while (i < song[\"song\"].length && playpause.current.classList.contains(\"playing\")) {\r\n            if (song[\"song\"][i][0] != \"rest\") {\r\n                synth.triggerAttackRelease(song[\"song\"][i][0], (bpmCalc(bpm))*song[\"song\"][i][1], now+timeSum)\r\n                // sampler.triggerAttackRelease(song[i][0], (bpmCalc(bpm))*song[i][1], now+timeSum)\r\n            } \r\n            timeSum += (bpmCalc(bpm))*song[\"song\"][i][1]\r\n            i += 1\r\n        }\r\n        // while (playpause.current.classList.contains(\"playing\")) {\r\n            // song[\"song\"].map(s => {\r\n            //     synth.triggerAttackRelease(s[0], (bpmCalc(bpm))*s[1], now+timeSum)\r\n            //     timeSum += (bpmCalc(bpm))*s[1]\r\n            // })\r\n        // }\r\n    }\r\n\r\n    function pauseSong() {\r\n        playpause.current.classList.remove(\"playing\")\r\n        playpause.current.querySelector(\"i.fas\").classList.remove(\"fa-pause\")\r\n        playpause.current.querySelector(\"i.fas\").classList.add(\"fa-play\")\r\n    }\r\n\r\n    function playPause(song) {\r\n        const isPlaying = playpause.current.classList.contains('playing')\r\n        if (isPlaying) {\r\n            pauseSong()\r\n        }\r\n        else {\r\n            playSong(song)\r\n        }\r\n    }\r\n\r\n    // ======= progresss bar===========\r\n\r\n    // function updateProgress(e) {\r\n    //     const { duration, currentTime } = e.srcElement;\r\n    //     const progressPercent = (currentTime / duration) * 100;\r\n    //     progress.style.width = `${progressPercent}%`;\r\n    // }\r\n    \r\n    // Set progress bar\r\n    function setProgress(clientWidth, offsetX) {\r\n        const width = clientWidth;\r\n        const clickX = offsetX;\r\n        const progressPercent = (clickX/width)*100\r\n        progressBar.current.style.width = `${progressPercent}%`;\r\n\r\n        console.log(width, clickX, progressPercent)\r\n        // const duration = audio.duration;\r\n        \r\n        // audio.currentTime = (clickX / width) * duration;\r\n    }\r\n\r\n    // // Time/song update\r\n    // audio.addEventListener('timeupdate', updateProgress);\r\n\r\n    // // Click on progress bar\r\n    // progressContainer.addEventListener('click', setProgress);\r\n\r\n    // // Song ends\r\n    // audio.addEventListener('ended', nextSong);\r\n\r\n    // // Time of song\r\n    // audio.addEventListener('timeupdate',DurTime);\r\n\r\n    // ======================================================\r\n\r\n    const toggleDetails = () => {\r\n        const isShown = detailsIcon.current.classList.contains('showing')\r\n        if (isShown) {\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.remove(\"fa-caret-up\")\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.add(\"fa-caret-down\")\r\n            details.current.style.display = \"none\"\r\n            detailsIcon.current.classList.remove(\"showing\")\r\n        } else {\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.remove(\"fa-caret-down\")\r\n            detailsIcon.current.querySelector(\"i.fas\").classList.add(\"fa-caret-up\")\r\n            details.current.style.display = \"block\"\r\n            detailsIcon.current.classList.add(\"showing\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"music-player-item\" ref={ item }>\r\n            <div className=\"music-player\">\r\n                <div className=\"play-pause-container\">\r\n                    <div className=\"play-pause\" ref={ playpause } onClick={() => playPause(props.song)}>\r\n                        <button className=\"play-pause-button\"><i className=\"fas fa-play\"></i></button>\r\n                        {/* <button className=\"play-pause play\" ref={ playpause } onClick={() => ring(props.song)}><i className=\"fas fa-play\"></i></button> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"progress-container\" ref={ progressContainer } onClick={(e) => setProgress(e.target.clientWidth, e.target.offsetX)}>\r\n                    <div className=\"progress\" ref={ progressBar }></div>\r\n                </div>\r\n                <button className=\"like-unlike unliked\"><i className=\"far fa-heart\"></i></button>\r\n            </div>\r\n            <div className=\"song-details-container\">\r\n                <div className=\"details-i-container\" ref={ detailsIcon } onClick={()=> toggleDetails()}>\r\n                    <i className=\"fas fa-caret-down\"></i>\r\n                </div>\r\n                <div ref={ details } className=\"song-details\">\r\n                    <p>scale: {props.song[\"details\"][\"scale\"]}</p>\r\n                    <p>key: {props.song[\"details\"][\"key\"]}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className=\"music-player\">\r\n        //     <div className=\"navigation\">\r\n        //         <button id=\"prev\" className=\"action-btn\"><i className=\"fas fa-backward\"></i></button>\r\n        //         <button id=\"play\" className=\"play-pause play action-btn action-btn-big\" onClick={() => ring(props.song)}><i className=\"fas fa-play\"></i></button>\r\n        //         {/* <i class=\"fas fa-pause\"></i> */}\r\n        //         <button id=\"next\" className=\"action-btn\"><i className=\"fas fa-forward\" onClick={() => checkSound()}></i></button>\r\n        //     </div>\r\n        //     <div className=\"progress-container\">\r\n        //         <div className=\"progress\" ref={ progressBar }></div>\r\n        //     </div>\r\n        //     <button className=\"like-unlike unliked\"><i className=\"far fa-heart\"></i></button>\r\n        //     {/* <i class=\"fas fa-heart\"></i> */}\r\n        // </div>\r\n    )\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\nexport function Settings (props) {\r\n\r\n    let customSettings = props.customSettings\r\n    const setCustomSettings = props.setCustomSettings\r\n\r\n    const mouseCursor = useRef()\r\n    const settingCard = useRef()\r\n    const selectors = useRef()\r\n    const applySettingsButton = useRef()\r\n    const selectScale = useRef()\r\n    const selectKey = useRef()\r\n\r\n    const applySettings = () => {\r\n        let list = [selectScale.current.value, selectKey.current.value]\r\n\r\n        let defaultValue = [\"None\", \"None\"]\r\n        let i = 0\r\n        while (i < list.length) {\r\n            list[i] = (list[i] != \"None\") ? list[i] : defaultValue[i]\r\n            i += 1\r\n        }\r\n\r\n        let settings = {...customSettings}\r\n        settings[\"scale\"] = list[0]\r\n        settings[\"key\"] = list[1]\r\n        setCustomSettings(settings)\r\n\r\n        hideSelectors()\r\n    }\r\n\r\n    const cursor = (e) => {\r\n        mouseCursor.current.style.display = \"block\"\r\n        mouseCursor.current.style.top = e.pageY + \"px\"\r\n        mouseCursor.current.style.left = e.pageX + \"px\"\r\n    }\r\n\r\n    const hideCursor = () => {\r\n        mouseCursor.current.style.display = \"none\"\r\n    }\r\n\r\n    const showSelectors = () => {\r\n        settingCard.current.style.display = \"none\"\r\n        selectors.current.style.display = \"flex\"\r\n    }\r\n\r\n    const hideSelectors = () => {\r\n        settingCard.current.style.display = \"flex\"\r\n        selectors.current.style.display = \"none\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"custom-settings\">\r\n            <div ref={ mouseCursor } className=\"cursor\"></div>\r\n            <div className=\"setting-card\" ref={settingCard} onMouseMove={(e) => cursor(e)} onMouseLeave={() => hideCursor()} onClick={() => showSelectors()}>\r\n                <i className=\"fas fa-cog\"></i>\r\n            </div>\r\n            <div ref={selectors} className=\"selectors\" onMouseMove={(e) => cursor(e)} onMouseLeave={() => hideCursor()}>\r\n                <label>scale : </label>\r\n                <select ref={ selectScale } name=\"scale\" id=\"scale\">\r\n                    <option value=\"None\">None</option>\r\n                    <option value=\"majorScale\">Major</option>\r\n                    <option value=\"minorScale\">Minor</option>\r\n                    <option value=\"majorPentatonic\">Major Pentatonic</option>\r\n                    <option value=\"minorPentatonic\">Minor Pentatonic</option>\r\n                    <option value=\"harmonicMajor\">Harmonic Major</option>\r\n                    <option value=\"harmonicMinor\">Harmonic Minor</option>\r\n                </select>\r\n                <label>key : </label>\r\n                <select ref={ selectKey } name=\"key\" id=\"key\">\r\n                    <option value=\"None\">None</option>\r\n                    <option value=\"C\">C</option>\r\n                    <option value=\"C#\">C#</option>\r\n                    <option value=\"D\">D</option>\r\n                    <option value=\"D#\">D#</option>\r\n                    <option value=\"E\">E</option>\r\n                    <option value=\"F\">F</option>\r\n                    <option value=\"F#\">F#</option>\r\n                    <option value=\"G\">G</option>\r\n                    <option value=\"G#\">G#</option>\r\n                    <option value=\"A\">A</option>\r\n                    <option value=\"A#\">A#</option>\r\n                    <option value=\"B\">B</option>\r\n                </select>\r\n\r\n                <div ref={ applySettingsButton } className=\"apply-settings\" onClick={() => applySettings()}>\r\n                    <p><i className=\"fas fa-sliders-h\"></i> apply settings</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Tone from 'tone';\r\n//  import from file\r\nimport { createSong } from './createSong';\r\nimport { MusicPlayer } from './music-player'\r\nimport { Settings } from './settings'\r\n// material-ui\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// ---------\r\n\r\nexport function Generator() {\r\n\r\n    const [createdSongs, setCreatedList] = useState([])\r\n    const [customSettings, setCustomSettings] = useState({\r\n        \"length\": \"4\", \"scale\": \"None\", \"key\": \"None\", \"rest\": false, \"bpm\": \"None\", \"selectedNotes\": \"None\"\r\n    })\r\n\r\n\r\n    const generateSong = (customSettings) => {\r\n        const song = createSong(customSettings)\r\n        setCreatedList([song, ...createdSongs])\r\n    }\r\n\r\n    const MusicPlayers = () => {\r\n        if (createdSongs.length > 0) {\r\n            return (\r\n                createdSongs.map(song => {\r\n                    return (\r\n                        <MusicPlayer song={song} key={song.song}></MusicPlayer>\r\n            )}))\r\n        } else {\r\n            return (\r\n                <div className=\"empty-player\">\r\n                    <p>Click the Generate button to create music!</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"generator\">\r\n            <section className=\"side-bar\">\r\n                <div className=\"side-menu-container\">\r\n                    <div className=\"menu-bar\"><i className=\"fas fa-bars\"></i></div>\r\n                    <div className=\"side-menu account\"><i className=\"fas fa-user-circle\"></i>Account</div>\r\n                    <div className=\"side-menu login\"><i className=\"fas fa-sign-in-alt\"></i>Login</div>\r\n                    <div className=\"side-menu about\"><i className=\"fas fa-building\"></i>About</div>\r\n                    <div className=\"side-menu faq\"><i className=\"fas fa-question-circle\"></i>FAQ</div>\r\n                </div>\r\n            </section>\r\n            <section className=\"content\">\r\n                <div className=\"top-image\">\r\n                    <h1>Music Genarator AI</h1>\r\n                </div>\r\n                <div className=\"thin-line\"></div>\r\n                <div className=\"music\">\r\n                    <div className=\"laboratory\">\r\n                        <div className=\"generator-button-container\">\r\n                            <Button variant=\"contained\" className=\"generator-button\" onClick={() => generateSong(customSettings)}>\r\n                                GENERATE\r\n                            </Button>\r\n                        </div>\r\n                        {/* <div className=\"generator-button-container\" onClick={() => generateSong()}>\r\n                            <Button variant=\"contained\" className=\"generator-button2\">\r\n                            GENERATE\r\n                            </Button>\r\n                        </div> */}\r\n\r\n                        <div className=\"settings-container\">\r\n                            <Settings customSettings={customSettings} setCustomSettings={setCustomSettings}></Settings>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"music-player-container\">\r\n                        <MusicPlayers></MusicPlayers>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// css\r\nimport './css/index.css';\r\n// import \"./css/beforemovement.css\"\r\nimport './css/music-player.css';\r\nimport './css/media-query.css';\r\n//  import from file\r\nimport { Generator } from './js/layout'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"app\">\r\n        <Generator />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// ========================================\r\n// ====  USE STRICTMODE?     ======================\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n"],"sourceRoot":""}